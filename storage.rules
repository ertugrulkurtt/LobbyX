rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper Functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidImageFile() {
      return resource.contentType.matches('image/.*') &&
             resource.size < 10 * 1024 * 1024; // 10MB limit
    }
    
    function isValidFileSize() {
      return resource.size < 100 * 1024 * 1024; // 100MB limit
    }
    
    function isValidFileName() {
      return resource.name.size() > 0 && 
             resource.name.size() <= 255 &&
             !resource.name.matches('.*[<>:"/\\|?*].*'); // No invalid characters
    }
    
    function isSafeFileType() {
      return resource.contentType.matches('image/.*') ||
             resource.contentType.matches('video/.*') ||
             resource.contentType.matches('audio/.*') ||
             resource.contentType.matches('application/pdf') ||
             resource.contentType.matches('text/.*') ||
             resource.contentType.matches('application/msword') ||
             resource.contentType.matches('application/vnd.openxmlformats-officedocument.*');
    }

    // ================================================================
    // PROFILE IMAGES - PROFİL RESİMLERİ
    // ================================================================
    match /profileImages/{userId}/{fileName} {
      allow read: if isAuthenticated();
      
      allow write: if isOwner(userId) && 
                      isValidImageFile() &&
                      isValidFileName() &&
                      resource.contentType.matches('image/(jpeg|jpg|png|webp|gif)') &&
                      resource.size < 5 * 1024 * 1024; // 5MB limit for profile images
      
      allow delete: if isOwner(userId);
    }

    // ================================================================
    // CONVERSATION ATTACHMENTS - SOHBET EKLERİ
    // ================================================================
    match /attachments/{conversationId}/{messageId}/{fileName} {
      allow read: if isAuthenticated() &&
                     firestore.exists(/databases/(default)/documents/conversations/$(conversationId)) &&
                     request.auth.uid in firestore.get(/databases/(default)/documents/conversations/$(conversationId)).data.participants;
      
      allow write: if isAuthenticated() &&
                      firestore.exists(/databases/(default)/documents/conversations/$(conversationId)) &&
                      request.auth.uid in firestore.get(/databases/(default)/documents/conversations/$(conversationId)).data.participants &&
                      isValidFileSize() &&
                      isValidFileName() &&
                      isSafeFileType();
      
      allow delete: if isAuthenticated() &&
                       firestore.exists(/databases/(default)/documents/conversations/$(conversationId)) &&
                       request.auth.uid in firestore.get(/databases/(default)/documents/conversations/$(conversationId)).data.participants;
    }

    // ================================================================
    // GROUP FILES - GRUP DOSYALARI
    // ================================================================
    match /groupFiles/{groupId}/{fileName} {
      allow read: if isAuthenticated() &&
                     firestore.exists(/databases/(default)/documents/groups/$(groupId)) &&
                     request.auth.uid in firestore.get(/databases/(default)/documents/groups/$(groupId)).data.members;
      
      allow write: if isAuthenticated() &&
                      firestore.exists(/databases/(default)/documents/groups/$(groupId)) &&
                      request.auth.uid in firestore.get(/databases/(default)/documents/groups/$(groupId)).data.members &&
                      isValidFileSize() &&
                      isValidFileName() &&
                      isSafeFileType();
      
      allow delete: if isAuthenticated() &&
                       firestore.exists(/databases/(default)/documents/groups/$(groupId)) &&
                       (request.auth.uid in firestore.get(/databases/(default)/documents/groups/$(groupId)).data.admins);
    }

    // ================================================================
    // TEMPORARY UPLOADS - GEÇİCİ YÜKLEMELER
    // ================================================================
    match /temp/{userId}/{fileName} {
      allow read, write: if isOwner(userId) &&
                           isValidFileSize() &&
                           isValidFileName() &&
                           isSafeFileType();
      
      allow delete: if isOwner(userId);
    }

    // ================================================================
    // VOICE MESSAGES - SES MESAJLARI
    // ================================================================
    match /voiceMessages/{conversationId}/{messageId}/{fileName} {
      allow read: if isAuthenticated() &&
                     firestore.exists(/databases/(default)/documents/conversations/$(conversationId)) &&
                     request.auth.uid in firestore.get(/databases/(default)/documents/conversations/$(conversationId)).data.participants;
      
      allow write: if isAuthenticated() &&
                      firestore.exists(/databases/(default)/documents/conversations/$(conversationId)) &&
                      request.auth.uid in firestore.get(/databases/(default)/documents/conversations/$(conversationId)).data.participants &&
                      resource.contentType.matches('audio/.*') &&
                      resource.size < 10 * 1024 * 1024 && // 10MB limit for voice messages
                      isValidFileName();
      
      allow delete: if isAuthenticated() &&
                       firestore.exists(/databases/(default)/documents/conversations/$(conversationId)) &&
                       request.auth.uid in firestore.get(/databases/(default)/documents/conversations/$(conversationId)).data.participants;
    }

    // ================================================================
    // BACKUP FILES - YEDEK DOSYALAR
    // ================================================================
    match /backups/{userId}/{fileName} {
      allow read, write: if isOwner(userId) &&
                           isValidFileSize() &&
                           isValidFileName();
      
      allow delete: if isOwner(userId);
    }

    // ================================================================
    // PUBLIC ASSETS - GENEL VARLIKLAR
    // ================================================================
    match /public/{fileName} {
      allow read: if true; // Public read access
      allow write: if false; // Only server can write
      allow delete: if false; // Only server can delete
    }

    // ================================================================
    // SYSTEM FILES - SİSTEM DOSYALARI
    // ================================================================
    match /system/{document=**} {
      allow read, write: if false; // Only server access
    }

    // ================================================================
    // DEFAULT DENY RULE - VARSAYILAN REDDETME KURALI
    // ================================================================
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
