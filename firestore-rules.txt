rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection - users can read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // User statistics - users can read/write their own stats
    match /userStats/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null; // Allow reading for leaderboard
    }
    
    // Daily activity tracking - users can read/write their own activity
    match /dailyActivity/{activityId} {
      allow read, write: if request.auth != null 
        && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null 
        && request.auth.uid == request.resource.data.userId;
    }
    
    // Message statistics - users can read/write their own message stats
    match /messageStats/{messageStatsId} {
      allow read, write: if request.auth != null 
        && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null 
        && request.auth.uid == request.resource.data.userId;
    }
    
    // XP logs - users can read their own XP logs, write is controlled
    match /xpLogs/{logId} {
      allow read: if request.auth != null 
        && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null 
        && request.auth.uid == request.resource.data.userId;
    }
    
    // Achievement progress - users can read/write their own achievements
    match /achievementProgress/{progressId} {
      allow read, write: if request.auth != null 
        && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null 
        && request.auth.uid == request.resource.data.userId;
    }
    
    // Public leaderboard data - all authenticated users can read
    match /leaderboard/{document=**} {
      allow read: if request.auth != null;
    }
    
    // Server-specific statistics (if needed)
    match /serverStats/{serverId}/userStats/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Chat messages (if storing in Firestore)
    match /conversations/{conversationId}/messages/{messageId} {
      allow read, write: if request.auth != null;
    }
    
    // Conversation metadata
    match /conversations/{conversationId} {
      allow read, write: if request.auth != null 
        && request.auth.uid in resource.data.participants;
      allow create: if request.auth != null 
        && request.auth.uid in request.resource.data.participants;
    }
    
    // Friend relationships
    match /friends/{userId}/friendList/{friendId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Friend requests
    match /friendRequests/{requestId} {
      allow read, write: if request.auth != null 
        && (request.auth.uid == resource.data.fromUserId 
            || request.auth.uid == resource.data.toUserId);
      allow create: if request.auth != null 
        && request.auth.uid == request.resource.data.fromUserId;
    }
    
    // Default deny rule for any other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
